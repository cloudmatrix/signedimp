
v0.3.1

    * Add ability to unsign a previously-signed frozen app, but inserting
      a DummySignedImportManager into the bootstrapping code.
    * Fixes for rpython esky compat script:
          * compile under PyPy 1.4
          * don't try to use O_BINARY on non-windows platforms


v0.3.0

    * Removed separate hashing of modules vs data files - all files are now
      hashed independently and the various files that make up a module import
      are checked independently at runtime.
    * Conform to some subtler points of the PEP302 importer spec, with respect
      to module reloading and sys.meta_path.
    * Add RPython compatability to signedimp.compat.esky
    * It is no longer possible to specify 'randbytes' at the module level
      in the various cryptobase modules, you must explicitly pass a callable
      to each constructor.


v0.2.0

    * Factor padding algorithm out from the RSA key class, so that it's easier
      to upgrade to a new scheme:
          * RSAKeyWithPSS is no more, just use RSAKey
          * the signature produced by RSAKey.sign() is prefixed with the name
            of the padding scheme used.
          * "pss-sha1" is the default padding scheme; change it by setting
            the attribute "default_padding_scheme" on the key.
    * output hash data in sorted order, for easier debugging by hand.
    * moved signedimp.pkgres to signedimp.compat.pkgres.
    * added signedimp.compat.esky, providing code to add signedimp support when
      freezing an application with esky.
    * tools.get_bootstrap_code() now returns code fully equivalent to doing
      "import signedimp", i.e. it initialises the signedimp module and assigns
      it to the local name "signedimp".

v0.1.5

    * better support for namespace packages and other abusers of __path__.
    * better support for frozen packages.
    * tools.sign_zipfile:  don't modify files that are not already zipfiles.
    * ability to record "module aliases" for cases where modules can be
      loaded under something other than their canonical names (Django template
      tag libraries, I'm looking in your direction...)

v0.1.4

    * implement basic integration with pkg_resources - just import the
      "signedimp.pkgres" module to install the necessary hooks.
    * have custom bootstrap code create an actual "signedimp" module, so
      it's easy to tell that it has been installed.

v0.1.3

    * use fast RSA primitives when PyCrypto is installed.
    * do some simple caching to speed up imports from the same source.
    * replace imp.load_[dynamic|compiled|source] with custom wrappers.
        * necessary for good interop with py2exe and py2app, which use
          imp.load_dynamic to load DLLs from the filesystem.
    * when bootstrapping a frozen executable, check whether signedimp is
      already present and shortcut if so.
        * necessary for good interop with esky on win32, where it tries to
          chainload into the frozen executable from an existing process.

v0.1.2

    * fixed bug in pure-python b64decode method.
    * made RSAKeyWithPSS objects pickleable.
    * added RSAKey.save_to_file and RSAKey.load_from_file for storing keys 
      on disk in an encrypted format.

v0.1.1

    * implemented sign_cxfreeze_app() function, although it currently requires
      a patched interpreter to be of any real use.

v0.1.0:

    * initial release; you might say *everything* has changed.

